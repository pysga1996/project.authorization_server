logging:
  level:
    root: INFO
    org:
      springframework:
        security:
          oauth2: DEBUG
        ws:
          server:
            MessageTracing:
              received: TRACE
              sent: TRACE
        jdbc:
          core: TRACE
      thymeleaf: INFO
  config: classpath:log4j-spring.xml
server:
  port: 8082
  servlet:
    context-path: /lambda-auth
    encoding:
      charset: UTF-8
      enabled: true
  error:
    whitelabel:
      enabled: false
    path: /error
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  ssl:
    enabled: true
    enabled-protocols: TLSv1.2
    key-alias: ${SSL_KEY_ALIAS:}
    key-password: ${SSL_KEY_PASSWORD:}
    key-store: classpath:vengeance.jks
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: JKS
    protocol: TLS
  forward-headers-strategy: framework
spring:
  session:
    store-type: redis
    redis:
      namespace: lambda:auth:session
      flush-mode: on_save
      cleanup-cron: "0 * * * * *"
    timeout: 1h
  redis:
    host: ${REDIS_HOST:}
    port: ${REDIS_PORT:}
    database: ${REDIS_DB:}
    password: ${REDIS_PASSWORD:}
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 100000
      maxLifetime: 600000
      maximum-pool-size: 20
      minimum-idle: 10
    initialization-mode: never
    password: ${SPRING_DATASOURCE_PASSWORD:}
    url: ${SPRING_DATASOURCE_URL:}
    username: ${SPRING_DATASOURCE_USERNAME:}
  main:
    allow-bean-definition-overriding: true
    banner-mode: log
  messages:
    basename: static/i18n/message
    encoding: UTF-8
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
  mvc:
    static-path-pattern: /
    log-resolved-exception: true
    view:
      prefix: classpath:/templates/
      suffix: .html
    throw-exception-if-no-handler-found: true
  thymeleaf:
    cache: false
  banner:
    location: classpath:banner.txt
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          introspection-uri: ${AUTH_SERVICE:}
          client-id: ${CLIENT_ID:}
          client-secret: ${CLIENT_SECRET:}
        jwt:
          jwk-set-uri: ${JWKS_ENDPOINT:}
# Override by WebMvcConfig.class
#  web:
#    resources:
#      static-locations: classpath:/static/
#      add-mappings: false
storage:
  storage-type: firebase
  temp: ${TEMP_DIR:}
  cloudinary:
    url: ${CLOUDINARY_URL:}
  firebase:
    database-url: ${FIREBASE_DATABASE_URL:}
    storage-bucket: ${FIREBASE_STORAGE_BUCKET:}
    credentials: ${FIREBASE_CREDENTIALS:}
  local:
    upload-dir: ${UPLOAD_DIR:}
webservices:
  url:
    notification: ${NOTIFICATION_WEBSERVICE_ENDPOINT:}
security:
  oath2:
    resource-id: user
custom:
  http-port: 8081
  https-port: 8082
  security-policy: CONFIDENTIAL
  connector-scheme: http
  trust-store-password: ${SSL_TRUSTSTORE_PASSWORD:}
  trust-store-type: JKS
  jwk:
    keystore: classpath:vengeance.jks
    keystore-password: ${JWK_KEYSTORE_PASSWORD:}
    key: ${JWK_KEY:}
    key-pass: ${JWK_KEYPASS:}
    key-id: ${JWK_KEY_ID:}


